spring:
  application: spring-security-oauth2
  security:
    oauth2:
      client:
        registration:
          keycloak:
            clientId: oauth2-client-app
            clientSecret: 3HaCXNApuA7VuXEWX7zPRnwOWWbaJKsV
            clientName: oauth2-client-app
            redirectUri: http://localhost:8081/login/oauth2/code/keycloak
            authorizationGrantType: authorization_code
            clientAuthenticationMethod: client_secret_basic
            scope: openid,profile,email
          google:
            clientId: 1022686525883-p709kjfukbj404etm1nn50sqgoqpk09u.apps.googleusercontent.com
            clientSecret: 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
            scope: openid,profile,email
          naver:
            clientId: RtYvFWqrh1ifyyKjwoZ0
            clientSecret: ypS1JpD4DQ
            authorizationGrantType: authorization_code
            clientName: naver-client-app
            redirectUri: http://localhost:8081/login/oauth2/code/naver
            scope: profile,email

        provider:
          keycloak:
            authorizationUri: http://localhost:8080/realms/oauth2/protocol/openid-connect/auth
            tokenUri: http://localhost:8080/realms/oauth2/protocol/openid-connect/token
            issuerUri: http://localhost:8080/realms/oauth2
            userInfoUri: http://localhost:8080/realms/oauth2/protocol/openid-connect/userinfo
            jwkSetUri: http://localhost:8080/realms/oauth2/protocol/openid-connect/certs
            userNameAttribute: preferred_username
          naver:
            authorizationUri: https://nid.naver.com/oauth2.0/authorize
            tokenUri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response

  mvc:
    staticPathPattern: /static/**



server:
  port: 8081